import{_ as l,o as t,c as i,f as s}from"./app.d5111385.js";const e="/assets/image.45c8f0f9.png",o="/assets/image-1.22d1e143.png",g=JSON.parse('{"title":"js","description":"","frontmatter":{"date":"2024-03-05T00:00:00.000Z","title":"js","tags":["javascript"]},"headers":[],"relativePath":"posts/js.md"}'),r={name:"posts/js.md"},a=s('<ul><li>class类 <ul><li>new关键字调用</li><li>class的构造方法constructor,new调用的时候自动执行 <ul><li>1.创建一个对象 moni = {}</li><li>2.讲类的prototype赋值给对象的__proto__ Preson.prototype = moni.<strong>proto</strong></li><li>3.将this指向为创建的对象</li><li>4.执行函数中的代码</li><li>5.返回对象</li></ul></li><li>继承extends，super <ul><li><img src="'+e+'" alt="alt text"></li><li><img src="'+o+'" alt="alt text"></li></ul></li></ul></li><li>模块化 <ul><li>为什么要模块化 <ul><li>代码之间相互影响</li></ul></li><li>commonjs <ul><li>导出 module.exports/exports</li><li>导入 require</li><li>导入区别 <ul><li>module.exports = {}</li><li>exports = module.exports = {}</li><li>exports不是直接操作导出对象</li></ul></li></ul></li></ul></li></ul>',1),_=[a];function n(p,c,u,m,d,x){return t(),i("div",null,_)}const j=l(r,[["render",n]]);export{g as __pageData,j as default};
